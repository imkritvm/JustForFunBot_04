# -*- coding: utf-8 -*-
"""Bot_01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WzCk3wWU8d5Eh2mFvGZRbO_bycO-vuQU

# **Read Message**
"""

import requests
base_url = "https://api.telegram.org/bot6429349145:AAHA3lG4ipBTl2tE4X9fbA3PTMLCupM4b0A/getupdates"
res = requests.get(base_url)
print(res.text)

"""#  **Send Messages**"""

import requests
base_url = "https://api.telegram.org/bot6429349145:AAHA3lG4ipBTl2tE4X9fbA3PTMLCupM4b0A/sendMessage"
parameter = {
    "chat_id" : "-1001729824100",
    "text" : "This is a Hey! from my Bot."
}
res = requests.get(base_url, data = parameter)
print(res.text)

"""# **Send Photo**"""

import requests
base_url = "https://api.telegram.org/bot6429349145:AAHA3lG4ipBTl2tE4X9fbA3PTMLCupM4b0A/sendPhoto"
parameter = {
    "chat_id" : "-1001729824100",
    "photo" : "https://c4.wallpaperflare.com/wallpaper/302/568/1003/bladerunner-blade-runner-blade-runner-2049-ana-de-armas-ryan-gosling-hd-wallpaper-preview.jpg",
    "caption" : "__This is a Photo send by the Bot.__",
}
res = requests.get(base_url, data = parameter)
print(res.text)

"""# **Send Audio Through Link**"""

import requests
base_url = "https://api.telegram.org/bot6429349145:AAHA3lG4ipBTl2tE4X9fbA3PTMLCupM4b0A/sendAudio"
parameter = {
    "chat_id" : "-1001729824100",
    "audio" : "https://t.me/lyricsforfun_04/141",
    "caption" : "__This is a Audio send by the Bot.__"
}
res = requests.get(base_url, data = parameter)
print(res.text)

"""# **Send File From Device Storage**"""

import requests

base_url = "https://api.telegram.org/bot6429349145:AAHA3lG4ipBTl2tE4X9fbA3PTMLCupM4b0A/sendDocument"

parameter = {
    "chat_id" : "-1001729824100",
    "document" : "https://t.me/JustForFunChannel_04/991",
    "caption" : "__This is a file send by the Bot.__"
}
res = requests.get(base_url, data = parameter)
print(res.text)

"""# **Send Reply**"""

import requests

base_url = "https://api.telegram.org/bot6429349145:AAHA3lG4ipBTl2tE4X9fbA3PTMLCupM4b0A"

def read_msg():
  parameter = {
    "offset" : offset
  }
  res = requests.get(base_url + "/getUpdates", data = parameter)
  data = res.json()

  for result in data["result"]:
    if "Hi" in result["message"]["text"]:
      send_msg()

def send_msg():
  parameter = {
    "chat_id" : "-1001729824100",
    "text" : "Hello There...!"
  }
  res = requests.get(base_url + "/sendMessage", data = parameter)
  print(res.text)

read_msg()

"""# **Chat Bot**"""

import requests
import pandas as pd

url = "/content/qna_chitchat_professional.tsv"

df = pd.read_csv(url, sep="\t")

base_url = "https://api.telegram.org/bot6429349145:AAHA3lG4ipBTl2tE4X9fbA3PTMLCupM4b0A"

def read_msg(offset):
  parameters = {
      "offset" : offset
  }

  resp = requests.get(base_url + "/getUpdates", data = parameters)
  data = resp.json()

  print(data)

  for result in data["result"]:
    send_msg(result)

  if data["result"]:
    return data["result"][-1]["update_id"] +1

  def auto_answer(message):
    answer = df.loc[df['Question'].str.lower() == message.lower()]

    if not answer.empty:
      answer = answer.iloc[0]['Answer']
      return answer

    else:
      return "Sorry, I don't understand what you want to say."

  def send_msg():
    text = message["message"]["text"]
    message_id = message["message"]["message_id"]
    answer = auto_answer(text)

    parameters = {
        "chat_id" : "-1001729824100",
        "text" : answer,
        "reply_to_message_id" : message_id
    }
    res = requests.get(base_url + "/sendMessage", data = parameters)
    print(res.text)

  offset = 0

  while True:
    offset = read_msg(offset)